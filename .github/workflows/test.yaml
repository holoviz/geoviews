name: tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
    - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 18 * * SUN'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre_commit:
    name: Run pre-commit
    runs-on: 'ubuntu-latest'
    steps:
      - uses: holoviz-dev/holoviz_tasks/pre-commit@v0.1a17
  unit_test_suite:
    name: Unit tests on Python ${{ matrix.python-version }}, ${{ matrix.os }}
    needs: [pre_commit]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ["3.9", "3.11"]
        include:
          - os: 'ubuntu-latest'
            python-version: '3.10'
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0}
    env:
      DISPLAY: ":99.0"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SETUPTOOLS_ENABLE_FEATURES: "legacy-editable"
      USE_PYGEOS: '0'
    steps:
      - uses: holoviz-dev/holoviz_tasks/install@v0.1a17
        with:
          name: unit_test_suite
          python-version: ${{ matrix.python-version }}
          channel-priority: strict
          channels: pyviz/label/dev,bokeh,conda-forge,nodefaults
          envs: "-o tests -o examples_extra -o recommended"
          cache: true
          conda-update: true
          nodejs: true
        id: install
      - name: download data
        run: |
          conda activate test-environment
          bash scripts/download_data.sh
      - name: git describe
        run: |
          git describe
      - name: doit test_unit
        run: |
          conda activate test-environment
          doit test_unit
      - name: test examples
        run: |
          conda activate test-environment
          doit test_examples
      - name: codecov
        if: github.event_name == 'push'
        run: |
          conda activate test-environment
          codecov
